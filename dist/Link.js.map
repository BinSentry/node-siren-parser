{"version":3,"sources":["../src/Link.js"],"names":["Link","link","JSON","stringify","Array","isArray","rel","href","title","type","prototype","toJSON","hasClass","cls"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEe,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAClC,MAAIA,IAAI,YAAYD,IAApB,EAA0B;AACzB,WAAOC,IAAP;AACA;;AACD,MAAI,EAAE,gBAAgBD,IAAlB,CAAJ,EAA6B;AAC5B,WAAO,IAAIA,IAAJ,CAASC,IAAT,CAAP;AACA;;AAED,0BAAO,qBAAoBA,IAApB,CAAP,EAAiC;AAAA,WAAM,iCAAiCC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAvC;AAAA,GAAjC;AACA,0BAAOG,KAAK,CAACC,OAAN,CAAcJ,IAAI,CAACK,GAAnB,CAAP,EAAgC;AAAA,WAAM,oCAAoCJ,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACK,GAApB,CAA1C;AAAA,GAAhC;AACA,0BAAO,aAAa,OAAOL,IAAI,CAACM,IAAhC,EAAsC;AAAA,WAAM,qCAAqCL,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACM,IAApB,CAA3C;AAAA,GAAtC;AACA,0BAAO,gBAAgB,OAAON,IAAI,SAA3B,IAAqCG,KAAK,CAACC,OAAN,CAAcJ,IAAI,SAAlB,CAA5C,EACC;AAAA,WAAM,mDAAmDC,IAAI,CAACC,SAAL,CAAeF,IAAI,SAAnB,CAAzD;AAAA,GADD;AAEA,0BAAO,gBAAgB,OAAOA,IAAI,CAACO,KAA5B,IAAqC,aAAa,OAAOP,IAAI,CAACO,KAArE,EACC;AAAA,WAAM,mDAAmDN,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACO,KAApB,CAAzD;AAAA,GADD;AAEA,0BAAO,gBAAgB,OAAOP,IAAI,CAACQ,IAA5B,IAAoC,aAAa,OAAOR,IAAI,CAACQ,IAApE,EACC;AAAA,WAAM,kDAAkDP,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACQ,IAApB,CAAxD;AAAA,GADD;AAGA,OAAKH,GAAL,GAAWL,IAAI,CAACK,GAAhB;AACA,OAAKC,IAAL,GAAYN,IAAI,CAACM,IAAjB;;AAEA,MAAIN,IAAI,SAAR,EAAgB;AACf,oBAAaA,IAAI,SAAjB;AACA;;AAED,MAAIA,IAAI,CAACO,KAAT,EAAgB;AACf,SAAKA,KAAL,GAAaP,IAAI,CAACO,KAAlB;AACA;;AAED,MAAIP,IAAI,CAACQ,IAAT,EAAe;AACd,SAAKA,IAAL,GAAYR,IAAI,CAACQ,IAAjB;AACA;AACD;;AAEDT,IAAI,CAACU,SAAL,CAAeC,MAAf,GAAwB,YAAW;AAClC,SAAO;AACNL,IAAAA,GAAG,EAAE,KAAKA,GADJ;AAENC,IAAAA,IAAI,EAAE,KAAKA,IAFL;AAGN,aAAO,aAHD;AAINC,IAAAA,KAAK,EAAE,KAAKA,KAJN;AAKNC,IAAAA,IAAI,EAAE,KAAKA;AALL,GAAP;AAOA,CARD;;AAUAT,IAAI,CAACU,SAAL,CAAeE,QAAf,GAA0B,UAASC,GAAT,EAAc;AACvC,SAAO,yBAAsBT,KAAtB,IAA+B,oBAAS,aAAT,EAAqBS,GAArB,CAAtC;AACA,CAFD","sourcesContent":["import assert from './assert';\nimport {contains} from './util';\n\nexport default function Link(link) {\n\tif (link instanceof Link) {\n\t\treturn link;\n\t}\n\tif (!(this instanceof Link)) {\n\t\treturn new Link(link);\n\t}\n\n\tassert('object' === typeof link, () => 'link must be an object, got ' + JSON.stringify(link));\n\tassert(Array.isArray(link.rel), () => 'link.rel must be an array, got ' + JSON.stringify(link.rel));\n\tassert('string' === typeof link.href, () => 'link.href must be a string, got ' + JSON.stringify(link.href));\n\tassert('undefined' === typeof link.class || Array.isArray(link.class),\n\t\t() => 'link.class must be an array or undefined, got ' + JSON.stringify(link.class));\n\tassert('undefined' === typeof link.title || 'string' === typeof link.title,\n\t\t() => 'link.title must be a string or undefined, got ' + JSON.stringify(link.title));\n\tassert('undefined' === typeof link.type || 'string' === typeof link.type,\n\t\t() => 'link.type must be a string or undefined, got ' + JSON.stringify(link.type));\n\n\tthis.rel = link.rel;\n\tthis.href = link.href;\n\n\tif (link.class) {\n\t\tthis.class = link.class;\n\t}\n\n\tif (link.title) {\n\t\tthis.title = link.title;\n\t}\n\n\tif (link.type) {\n\t\tthis.type = link.type;\n\t}\n}\n\nLink.prototype.toJSON = function() {\n\treturn {\n\t\trel: this.rel,\n\t\thref: this.href,\n\t\tclass: this.class,\n\t\ttitle: this.title,\n\t\ttype: this.type\n\t};\n};\n\nLink.prototype.hasClass = function(cls) {\n\treturn this.class instanceof Array && contains(this.class, cls);\n};\n"],"file":"Link.js"}